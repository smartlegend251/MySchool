# Generated by Django 5.0.4 on 2024-05-09 16:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_Student', models.BooleanField(default=False)),
                ('is_BranchAdmin', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BranchAdmin',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('branch_code', models.IntegerField()),
                ('branch_name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('languages_known', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/Branch/images/')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('aadharNumber', models.CharField(max_length=12, unique=True)),
                ('branch_code', models.IntegerField()),
                ('roll_for', models.CharField(max_length=100)),
                ('assigned_class', models.CharField(max_length=100)),
                ('branch_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('joining_date', models.DateField()),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], max_length=20)),
                ('qualification', models.CharField(max_length=100)),
                ('experience_years', models.IntegerField()),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_number', models.CharField(max_length=15)),
                ('emergency_contact_relationship', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/Staff/images/')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('qualification_certificate', models.FileField(blank=True, null=True, upload_to='Staff/qualification_certificates/')),
                ('languages_known', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/Student/images/')),
                ('roll_number', models.CharField(max_length=10)),
                ('sats_number', models.CharField(max_length=10)),
                ('grade', models.CharField(choices=[('lkg', 'LKG'), ('ukg', 'UKG'), ('1', 'Grade 1'), ('2', 'Grade 2'), ('3', 'Grade 3'), ('4', 'Grade 4'), ('5', 'Grade 5'), ('6', 'Grade 6'), ('7', 'Grade 7'), ('8', 'Grade 8'), ('9', 'Grade 9'), ('10', 'Grade 10')], max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('fatherName', models.CharField(max_length=100)),
                ('motherName', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('dob', models.DateField(blank=True, null=True)),
                ('aadharNumber', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('religion', models.CharField(blank=True, max_length=15, null=True)),
                ('Social_catagory', models.CharField(choices=[('General', 'General'), ('OBC', 'Other Backward Class'), ('SC', 'Scheduled Caste'), ('ST', 'Scheduled Tribe'), ('EWS', 'Economically Weaker Section')], max_length=50)),
                ('medium', models.CharField(max_length=10)),
                ('disablity', models.CharField(choices=[('None', 'None'), ('Visual', 'Visual Impairment'), ('Hearing', 'Hearing Impairment'), ('Mobility', 'Mobility Impairment'), ('Cognitive', 'Cognitive Impairment'), ('Other', 'Other')], default='None', max_length=20)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('parent_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('student_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('parent_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('student_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('branch_code', models.IntegerField(blank=True, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tc_issued', models.BooleanField(default=False)),
                ('tc', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
    ]
